---
- name: Deploying TCAT
  gather_facts: False
  hosts: all
  remote_user: root
  become: true
  become_method: sudo
  environment:
    LC_ALL: en_US.UTF-8
    LANG: en_US.UTF-8
    LANGUAGE: en_US.UTF-8
    CC: /usr/bin/gcc-4.9
    CXX: /usr/bin/g++4.9
  vars:
      repository_git_path: https://github.com/cuappdev/tcat.js.git
      repository_path: /home/vagrant/tcat.js
  tasks:
  - name: install python 2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

  - name: Add toolchain repository
    apt_repository: repo='ppa:ubuntu-toolchain-r/test' state=present

  - name: Add cmake repository
    apt_repository: repo='ppa:george-edison55/cmake-3.x' state=present

  - name: Run shell script for curling Nodejs
    shell: |
      curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -

  - name: Install necessary packages
    apt: update_cache=yes name={{ item }} state=present
    remote_user: root
    become: yes
    with_items:
      - build-essential
      - nodejs
      - lua5.2
      - software-properties-common
      - gcc-4.9
      - g++-4.9
      - nginx

  - name: Install necessary npm packages
    npm: global=yes name={{ item }} production=yes state=latest
    remote_user: root
    become: yes
    with_items:
      - pm2
      - babel-cli
      - babel-jest
      - babel-preset-flow
      - flow-bin
      - osrm
      - appdev

  - name: Clone app repository
    git:
      repo: "{{ repository_git_path }}"
      dest: "{{ repository_path }}"
      version: master
      force: yes

  - name: NPM install everything
    command: npm install
    args:
      chdir: "{{ repository_path }}"

  - name: NPM link appdev
    command: npm link
    args:
      chdir: "{{ repository_path }}"

  - name: lua Commands
    command: node_modules/osrm/lib/binding/osrm-extract osrm/map.osm -p node_modules/osrm/profiles/foot.lua
    args:
      chdir: "{{ repository_path }}"

  - name: osrm Commands
    command: node_modules/osrm/lib/binding/osrm-contract osrm/map.osrm
    args:
      chdir: "{{ repository_path }}"

  - name: moving osrm folder
    command: mv *.osm* ./osrm; mv *.osrm* ./osrm
    args:
      chdir: "{{ repository_path }}"
      creates: "{{ repository_path }}/osrm"

  - name: Copy Upstart configuration
    template: src=upstart.conf.j2 dest=/etc/init/upstart.conf

  - name: Make sure our server is running
    service: name=upstart state=started

  - name: Copy Nginx site values
    template: src=tcat.nginx.j2 dest=/etc/nginx/sites-enabled/tcat
    notify:
      - restart nginx
  - name: Remove any default sites
    file: path=/etc/nginx/sites-enabled/default state=absent
    notify:
      - restart nginx
  - name: Make sure nginx is running
    service: name=nginx state=started
  handlers:
    - name: restart nginx
      service: name=nginx state=restarted
